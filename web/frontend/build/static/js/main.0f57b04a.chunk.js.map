{"version":3,"sources":["logo.svg","components/User/User.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["User","useState","users","setUsers","diaplay","setDiaplay","useEffect","a","axios","result","data","fetchData","className","Button","variant","color","onClick","console","log","map","user","studentID","firstName","lastName","id","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAe,G,MAAA,IAA0B,kC,uEC8C1BA,EA1CF,WAET,MAA0BC,mBAAgB,IAA1C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACOC,IACjB,UAFU,OACRC,EADQ,OAIdN,EAASM,EAAOC,MAJF,2CAAH,qDAMfC,KACD,IAGC,sBAAKC,UAAU,OAAf,UACI,8CACA,oEACA,cAACC,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,QAAS,WACTX,GAAW,GACXY,QAAQC,IAAIhB,IALhB,mBAWW,IAAVE,EAAgB,8BACZF,EAAMiB,KAAI,SAAAC,GAAI,OACX,+BACKA,EAAKC,UADV,IACsBD,EAAKE,UAD3B,IACuCF,EAAKG,WADnCH,EAAKI,SAId,SCxBLC,MAXf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKc,IAAKC,EAAMf,UAAU,WAAWgB,IAAI,SACzC,cAAC,EAAD,UCIOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f57b04a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nconst User = () => {\n\n    const [users, setUsers] = useState<any[]>([]);\n    const [diaplay, setDiaplay] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios(\n                '/users',\n            );\n            setUsers(result.data);\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"User\">\n            <h2>CCC Project2</h2>\n            <h3>Click the button to load the users</h3>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={()=>{\n                setDiaplay(true)\n                console.log(users)}\n                }\n            >\n                load\n            </Button>\n\n            {diaplay===true?(<div>\n                {users.map(user => (\n                    <li key={user.id}>\n                        {user.studentID} {user.firstName} {user.lastName}\n                    </li>\n                ))}\n            </div>):null}\n        </div>\n    );\n}\n\n\nexport default User;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from \"./components/User/User\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <User />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}